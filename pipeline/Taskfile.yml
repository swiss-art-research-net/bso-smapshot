# https://taskfile.dev

version: '3'

vars:
  GENERATOR_POLICY: /mapping/generator-policy.xml

tasks:
  run:
    cmds:
    - task: retrieve-data
    - task: prepare-mapping
    - task: perform-mapping

  retrieve-data:
    cmds:
      - python retrieve-smapshot-data.py

  prepare-mapping:
    vars:
      INPUT_FOLDER: /data/xml
      OUTPUT_FOLDER: /data/ttl
      TEMP_FOLDER: /data/temp
    cmds:
      - rm -rf {{.TEMP_FOLDER}}
      - mkdir -p {{.TEMP_FOLDER}}
      - |
        MAPPED_FILES=$(ls -1 {{.OUTPUT_FOLDER}} | sed s/.ttl//g)
        for l in $(ls -1 {{.INPUT_FOLDER}} | sed s/.xml//g); do 
          if [[ ! $MAPPED_FILES =~ (^|[[:space:]])$l($|[[:space:]]) ]]; then
            cp "{{.INPUT_FOLDER}}/$l.xml" "{{.TEMP_FOLDER}}/$l.xml"
          fi
        done

  perform-mapping:
    desc: Map Smapshot XML data to CIDOC/RDF
    vars:
      INPUT_FOLDER: /data/temp
      OUTPUT_FOLDER: /data/ttl
      MAPPING_FILE: /mapping/mapping-smapshot.x3ml
      BATCHSIZE: 1
    status:
      - test {{.INPUT_FOLDER}}/*.xml
    sources:
      - /data/temp/*.xml
      - /mapping/mapping-smapshot.x3ml
    generates:
      - /data/ttl/*.ttl
    cmds:
      - bash /pipeline/performMapping.sh -i {{.INPUT_FOLDER}} -o {{.OUTPUT_FOLDER}} -m {{.MAPPING_FILE}} -g {{.GENERATOR_POLICY}} -b {{.BATCHSIZE}}
